{"name":"Ln","tagline":"Ln, a more natural Log.","body":"Ln [![Build Status](https://travis-ci.org/f2prateek/ln.png)](https://travis-ci.org/f2prateek/ln)\r\n==============\r\n\r\nAndroid applications typically use the built-in android.util.Log facility to log information to the android console.\r\nLn is more natural log for Android. Forked from [RoboGuice](1).\r\nIt allows you to use a single API to control the log level, disable all logging (e.g. for release builds) and log to multiple endpoints.\r\nI was tired of copying these classes into my apps, so now it's a library.\r\n\r\nUsage\r\n--------------\r\n\r\n 1. Call `Ln#set` with your instance of `LnInterface`, such as `EmptyLn` (used by default) for release builds or `DebugLn` for debug builds.\r\n 2. Call `Ln`'s static methods everywhere throughout your app.\r\n 3. Call `Ln#setLogginLevel` to change the logLevel at different points in your app.\r\n\r\nCheck out the sample app in `ln-sample/` to see it in action.\r\n\r\nExamples\r\n--------------\r\n\r\n```java\r\nLn.v(\"hello there\"); // prints \"hello there\"\r\nLn.d(\"%s %s\", \"hello\", \"there\"); // prints \"hello there\" with varargs\r\nLn.e(exception, \"Error during some operation\"); // Throwables go at the FRONT!\r\nLn.w(exception, \"Error during %s operation\", \"some other\"); // Throwables and varargs\r\n```\r\n\r\nExtending\r\n-------------\r\n\r\nTo log to a different endpoint you have one of these options, simply implement `LnInterface`. If you don't want to implement all the methods, extend `EmptyLn` and override the ones you need.\r\n\r\nTo log to multiple endpoints (say analytics and crash server) :\r\n 1. Initialize an instance of `LnFacade`. This class is facade, and delegates all calls to list of `LnInterface`'s that it maintains.\r\n 2. Use `Ln#addLoggingEndpoint` to add your instances of `LnInterface`.\r\n 3. Call `Ln#set` with your instance of `LnFacade`\r\n\r\nDownload\r\n--------\r\n\r\nDownload [the latest JAR][1] or grab via Maven:\r\n\r\n```xml\r\n<dependency>\r\n  <groupId>com.f2prateek.ln</groupId>\r\n  <artifactId>ln</artifactId>\r\n  <version>(insert latest version)</version>\r\n</dependency>\r\n```\r\nor Gradle:\r\n```groovy\r\ncompile 'com.f2prateek.ln:ln:(insert latest version)'\r\n```\r\n\r\n\r\nLicense\r\n-------\r\n\r\n    The MIT License (MIT)\r\n\r\n    Copyright (c) 2013 Prateek Srivastava\r\n    Copyright (c) 2010 Xtreme Labs and Pivotal Labs\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in all\r\n    copies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n    SOFTWARE.\r\n\r\n\r\n [1]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.f2prateek.ln&a=ln&v=LATEST\r\n [2]: https://code.google.com/p/roboguice/wiki/Logging","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}